<%- include('partials/header'); -%>

<h1>Ausleihen</h1>

<% if (error) { %>
<div class="w3-panel w3-red divError">
  <p class="pError"><%= error %></p>
</div>
<% } %>

<% if (admin) { %>
<div class="w3-panel w3-border divScore">
  <% const route = admin ? "score" : "user"; %>
  <form action="/<%= route %>/checkouts" method="POST" id="formFilter">
    <h3>Filter</h3>
    <label>Noten Signatur</label>

    <select class="w3-select" name="signature">
      <option value="" disabled selected>Noten auswählen</option>
      <% for (const signature of signatures) { %>
      <% const selected = signature.id === filter.signature ? "selected" : "" %>
      <option value="<%= signature.id %>" <%= selected %>><%= signature.name %></option>
      <% } %>
    </select>

    <label>Nur offene</label>
    <input type="checkbox" name="checkedOut" value="true" <%= filter.checkedOut ? "checked" : "" %> class="w3-check checkedOut">
    <p></p>
    <button class="w3-button w3-black btnCheckouts" type="submit">Suchen</button>
    <p></p>
  </form>
</div>
<% } %>

<% if (checkouts) { %>
<% const statSummary = filter.checkedOut ? `${checkouts.length} (offen) von ${scoreTypeTotalCheckedOutCount} (ausgeliehen) von ${scoreTypeTotalCount} (gesamt)` : `${checkouts.length} Ausleihvorgänge` %>  
<div class="w3-left-align"><p><%= statSummary %></p></div>
<div class="w3-responsive">

  <!-- <input class="w3-input w3-border w3-padding" type="text" placeholder="Filtern nach Benutzer.." id="searchUserInput" onkeyup="filterUser()"> -->
  <p></p>
  <table class="w3-table-all" id="checkoutsTable">
    <tr>
      <% if (filter.signature === SIGNATURE_ALL.id) { %>
      <th>Werk</th>
      <% } %>
      <th>Noten Id</th>
      <th>Noten ext. Id</th>
      <% if (admin) { %>
      <th>Benutzer</th>
      <% } %>
      <th>Ausgeliehen am</th>
      <th>Kommentar Ausleihe</th>
      <% if (admin) { %>
      <th></th> <!-- Schalter Rückgabe -->
      <% } %>
      <th>Rückgabe am</th>
      <th>Kommentar Rückgabe</th>
    </tr>
    <% if (admin) { %>
    <tr>
      <% let colOffset = 0; %>
      <% if (filter.signature === SIGNATURE_ALL.id) { %>
      <% colOffset = 1; %>
      <td>&nbsp;</td>
      <% } %>
      <td>&nbsp;</td>
      <th><input class="w3-input w3-border w3-padding" type="text" placeholder="Filtern.." id="searchScoreExtIdInput" onkeyup="filterCheckoutsTableBy('searchScoreExtIdInput', <%= colOffset+1 %>)"></th>
      <% if (admin) { %>
      <th><input class="w3-input w3-border w3-padding" type="text" placeholder="Filtern.." id="searchUserInput" onkeyup="filterCheckoutsTableBy('searchUserInput', <%= colOffset+2 %>)"></th>
      <% } %>
      <td>&nbsp;</td>
      <td>&nbsp;</td>
      <td>&nbsp;</td>
      <td>&nbsp;</td>
      <td>&nbsp;</td>
    </tr>
    <% } %>
    <% 
    checkouts.forEach(checkoutWithUser => { 
      const checkout = checkoutWithUser.checkout;
      const user = checkoutWithUser.user;
      const userName = user ? (user.firstName + " " + user.lastName) : checkout.userId;
      const voice = user?.singGroup ?? "?";
      const userNamePlusVoice = `${userName} (${voice})`;
      const userEmail = user ? user.email : "";  // user probably deleted from db
      const checkoutTimestamp = checkout.checkoutTimestamp ? checkout.checkoutTimestamp.toLocaleDateString("de-DE") : "";
      const checkinTimestamp = checkout.checkinTimestamp ? checkout.checkinTimestamp.toLocaleDateString("de-DE") : "";
      const scoreExtId = checkoutWithUser.scoreExtId;
    %>
    <tr>
      <% if (filter.signature === SIGNATURE_ALL.id) { %>
      <td><%= signatureMap.get(checkoutWithUser.signature) %></td>
      <% } %>
      <td><%= checkout.scoreId %></td>
      <td><%= scoreExtId %></td>
      <% if (admin) { %>
      <td>
        <button onclick="userDetails('<%= userName %>', '<%= userEmail %>')" class="w3-button w3-pale-blue"><%= userNamePlusVoice %></button>
      </td>
      <% } %>
      <% if (!admin) { %>
      <td><%= checkoutTimestamp %></td>
      <% } else { %>
      <td><button onclick="editCheckout('<%= checkout.scoreId %>','<%= checkout._id %>','<%= checkout.checkoutComment %>','<%= checkout.checkinComment %>')" class="w3-button w3-pale-blue"><%= checkoutTimestamp %></button></td>
      <% } %>
      <td><%= checkout.checkoutComment %></td>
      <td>
        <% if (!checkinTimestamp && admin) { %>
        <button onclick="confirmCheckin('<%= checkout.scoreId %>', '<%= checkout.userId %>')" class="w3-button w3-pale-blue">Rückgabe</button>
        <% } %>
      </td>
      <td><%= checkinTimestamp %></td>
      <td><%= checkout.checkinComment %></td>
    </tr>
    <% }); %>
  </table>
</div>
<% } %>

<!-- The checkin modal -->
<div id="checkinModal" class="w3-modal">
  <div class="w3-modal-content">
    <div class="w3-container">
      <span onclick="document.getElementById('checkinModal').style.display='none'" class="w3-button w3-display-topright">&times;</span>

      <div class="w3-panel w3-green divModalSuccess" style="display: none">
        <p class="pModalSuccess">Rückgabe erfolgreich</p>
      </div>
      <div class="w3-panel w3-red divModalError" style="display: none">
        <p class="pModalError">Rückgabe Fehler</p>
      </div>

      <p class="p1">Some text in the Modal..</p>
      <p class="p2">Some text in the Modal..</p>


      <form action="/checkin" id="formCheckin">
        <input type="hidden" name="scoreId" value="" class="scoreId">
        <label>Kommentar Rückgabe</label>
        <input type="text" name="comment" class="comment">
        <p></p>
        <button class="w3-button w3-black btnCheckin">OK</button>
      </form>

      <P></P>

    </div>
  </div>
</div>

<!-- The user details modal -->
<div id="userDetailsModal" class="w3-modal">
  <div class="w3-modal-content">
    <div class="w3-container">
      <span onclick="document.getElementById('userDetailsModal').style.display='none'" class="w3-button w3-display-topright">&times;</span>

      <p class="userp2">Some text in the Modal..</p>

      <table class="w3-table-all" id="checkoutsTable">
        <tr>
          <th>E-Mail</th>
          <th>Registriert am</th>
        </tr>
        <tr>
          <td class="userDetailsEmail"></td>
          <td class="userDetailsRegisterDate"></td>
        </tr>
      </table>

      <p></p>

    </div>
  </div>
</div>

<!-- edit checkout modal -->
<div id="editCheckoutModal" class="w3-modal">
  <div class="w3-modal-content">
    <div class="w3-container">
      <span onclick="document.getElementById('editCheckoutModal').style.display='none'" class="w3-button w3-display-topright">&times;</span>
      <h3>Ausleihe bearbeiten</h3>

      <div class="w3-panel w3-green divEditCheckoutModalSuccess" style="display: none">
        <p class="pEditCheckoutModalSuccess">Bearbeitung erfolgreich:</p>
      </div>
      <div class="w3-panel w3-red divEditCheckoutModalError" style="display: none">
        <p class="pEditCheckoutModalError">Bearbeitung Fehler</p>
      </div>

      <p class="editCheckoutP1">Score id..</p>
      <p class="editCheckoutP2">Checkout Id..</p>

      <form action="/updateCheckout" id="formEditCheckout">
        <input type="hidden" name="editCheckoutScoreId" value="" class="editCheckoutScoreId">
        <input type="hidden" name="editCheckoutCheckoutId" value="" class="editCheckoutCheckoutId">
        <table class="w3-table-all" id="editCheckoutTable">
          <tr>
            <th>Kommentar Ausleihe</th>
            <th>Kommentar Rückgabe</th>
            <th>User Id</th>
          </tr>
          <tr>
            <td><input type="text" name="editCheckoutComment" class="w3-input editCheckoutCommentCheckout"></td>
            <td><input type="text" name="editCheckinComment" class="w3-input editCheckoutCommentCheckin"></td>
            <td><input type="text" name="editCheckoutUserId" class="w3-input editCheckoutUserId"></td>
          </tr>
        </table>
        <p></p>
        <button class="w3-button w3-black btnUpdateCheckout">OK</button>
      </form>

      <P></P>
      <h4>User suchen</h4>

      <form action="/userSearch" id="formUserSearch">
        <table class="w3-table-all" id="tableUserSearch">
          <tr>
            <th>Nachname</th>
          </tr>
          <tr>
            <td><input type="text" name="lastName" class="w3-input inputLastName"></td>
          </tr>
        </table>
        <p></p>
        <button class="w3-button w3-black btnUserSearch">User suchen</button>
      </form>
      <table id="tableUsers" class="w3-table-all tableUsers" />
      <p></p>

    </div>
  </div>
</div>


<%- include('partials/footer'); -%>

<script>
  const divModalSuccess = document.querySelector('.divModalSuccess');
  const divModalError = document.querySelector('.divModalError');
  const pModalSuccess = document.querySelector('.pModalSuccess');
  const pModalError = document.querySelector('.pModalError');

  const divEditCheckoutModalSuccess = document.querySelector('.divEditCheckoutModalSuccess');
  const divEditCheckoutModalError = document.querySelector('.divEditCheckoutModalError');

  formCheckin.addEventListener('submit', async (e) => {
    e.preventDefault();
    // divError.style = "display: none";

    const inputScoreId = document.querySelector('.scoreId');
    const inputComment = document.querySelector('.comment');
    await postCheckin(inputScoreId.value, inputComment.value);
  });


  function filterCheckoutsTableBy(input, fieldIdx) {
    var input, filter, table, tr, td, i;
    input = document.getElementById(input);
    filter = input.value.toUpperCase();
    table = document.getElementById("checkoutsTable");
    tr = table.getElementsByTagName("tr");
    tr[1].style.display = ""; // the row with the input fields
    for (i = 2; i < tr.length; i++) {
      td = tr[i].getElementsByTagName("td")[fieldIdx];
      if (td) {
        txtValue = td.textContent || td.innerText;
        if (txtValue.toUpperCase().indexOf(filter) > -1) {
          tr[i].style.display = "";
        } else {
          tr[i].style.display = "none";
        }
      }
    }
  }

  function confirmCheckin(scoreId, userId) {
    const inputScoreId = document.querySelector('.scoreId');
    inputScoreId.value = scoreId;
    const inputComment = document.querySelector('.comment');
    inputComment.value = "";

    const p1 = document.querySelector('.p1');
    const p2 = document.querySelector('.p2');
    p1.textContent = `Rückgabe von Noten Id ${scoreId}`;
    p2.textContent = `durch Benutzer ${userId}?`;


    divModalSuccess.style = "display: none";
    divModalError.style = "display: none";
    document.getElementById('checkinModal').style.display = 'block';
  }

  async function postCheckin(scoreId, comment) {
    try {
      const res = await fetch('/score/checkin', {
        method: 'POST',
        body: JSON.stringify({
          scoreId,
          comment,
        }),
        headers: {
          'Content-Type': 'application/json'
        }
      });
      const data = await res.json();
      console.log("data=", data);
      if (data.errors) {
        divModalError.style = "display: block";
        pModalError.textContent = data.errors;
        return false;
      }
      if (data.checkinScore) {
        // successfull checkin
        // console.log(data.checkinScore);

        const btnCheckin = document.querySelector('.btnCheckin');
        divModalSuccess.style = "display: block";

        // TODO: update filtered checkouts list
      }
      return true;
    } catch (err) {
      console.log("err=", err);
      divModalError.style = "display: block";
      pModalError.textContent = err.message;
    }
  }

  // TODO: couldn't manage to transfer user object
  function userDetails(userName, email) {
    console.log(email);

    const p2 = document.querySelector('.userp2');
    p2.textContent = `Benutzerdaten von ${userName}?`;

    const tdEmail = document.querySelector('.userDetailsEmail');
    tdEmail.textContent = email;
    const tdRegisterDate = document.querySelector('.userDetailsRegisterDate');
    tdRegisterDate.textContent = "TODO";

    document.getElementById('userDetailsModal').style.display = 'block';
  }

  function editCheckout(scoreId, checkoutId, checkoutComment, checkinComment) {
    // console.log(checkoutId);

    // const inputScoreId = document.querySelector('.scoreId');
    // inputScoreId.value = scoreId;
    // const inputComment = document.querySelector('.comment');
    // inputComment.value = "";

    const p1 = document.querySelector('.editCheckoutP1');
    const p2 = document.querySelector('.editCheckoutP2');
    p1.textContent = `Noten: ${scoreId}`;
    p2.textContent = `Checkout Id: ${checkoutId}`;

    const inputScoreId = document.querySelector('.editCheckoutScoreId');
    inputScoreId.value = scoreId;
    const inputCheckoutId = document.querySelector('.editCheckoutCheckoutId');
    inputCheckoutId.value = checkoutId;
    const inputCheckoutComment = document.querySelector('.editCheckoutCommentCheckout');
    inputCheckoutComment.value = checkoutComment;
    const inputCheckinComment = document.querySelector('.editCheckoutCommentCheckin');
    inputCheckinComment.value = checkinComment;

    divModalSuccess.style = "display: none";
    divModalError.style = "display: none";
    document.getElementById('editCheckoutModal').style.display = 'block';
  }

  formEditCheckout.addEventListener('submit', async (e) => {
    e.preventDefault();
    // divError.style = "display: none";

    const inputScoreId = document.querySelector('.editCheckoutScoreId');
    const inputCheckoutId = document.querySelector('.editCheckoutCheckoutId');
    const inputCommentCheckout = document.querySelector('.editCheckoutCommentCheckout');
    const inputCommentCheckin = document.querySelector('.editCheckoutCommentCheckin');
    const inputUserId = document.querySelector('.editCheckoutUserId');

    await postUpdateCheckout(inputScoreId.value, inputCheckoutId.value, inputCommentCheckout.value, inputCommentCheckin.value, inputUserId.value);
  });

  async function postUpdateCheckout(scoreId, checkoutId, checkoutComment, checkinComment, userId) {
    try {
      console.log(scoreId, checkoutId, checkoutComment, checkinComment, userId);

      const res = await fetch('/score/updateCheckout', {
        method: 'POST',
        body: JSON.stringify({
          scoreId,
          checkoutId,
          checkoutComment,
          checkinComment,
          userId,
        }),
        headers: {
          'Content-Type': 'application/json'
        }
      });
      const data = await res.json();
      console.log("data=", data);
      if (data.errors) {
        divEditCheckoutModalError.style = "display: block";
        pEditCheckoutModalError.textContent = data.errors;
        return false;
      }
      if (data.updateScore) {
        // successfull checkin
        // console.log(data.checkinScore);

        // const btnEditCheckoutCheckin = document.querySelector('.btnCheckin');
        divEditCheckoutModalSuccess.style = "display: block";

        // TODO: update filtered checkouts list
      }
      return true;
    } catch (err) {
      console.log("err=", err);
      divModalError.style = "display: block";
      pModalError.textContent = err.message;
    }
  }

  formUserSearch.addEventListener('submit', async (e) => {
    e.preventDefault();
    const inputLastName = document.querySelector('.inputLastName');
    await postUserSearch(inputLastName.value);
  });

  async function postUserSearch(lastName) {
    try {
      const res = await fetch('/score/userSearch', {
        method: 'POST',
        body: JSON.stringify({
          lastName,
        }),
        headers: {
          'Content-Type': 'application/json'
        }
      });
      const data = await res.json();
      console.log("data=", data);
      if (data.errors) {
        divEditCheckoutModalError.style = "display: block";
        pEditCheckoutModalError.textContent = data.errors;
        return false;
      }
      if (data.users) {
        const tableUsers = document.querySelector('.tableUsers');
        tableUsers.innerHTML = "";
        for (const user of data.users) {
          const row = tableUsers.insertRow(-1);
          const cell = row.insertCell(0);
          cell.innerHTML = `<button onclick="chooseUser('${user.id}')" class="w3-button w3-pale-blue">${user.firstName} ${user.lastName}</button>`;
        }
        tableUsers.insertAdjacentHTML('afterend', '<p/>');
      }
      return true;
    } catch (err) {
      console.log("err=", err);
      divEditCheckoutModalError.style = "display: block";
      pEditCheckoutModalError.textContent = err.message;
    }
  }

  function chooseUser(userId) {
    console.log(userId);
    const inputUserId = document.querySelector('.editCheckoutUserId');
    inputUserId.value = userId;
  }
</script>